version: "3"

tasks:
  all:
    desc: Build for distribution for all platforms
    cmds:
      - task: Windows_32bit
      - task: Windows_64bit
      - task: Linux_32bit
      - task: Linux_64bit
      - task: Linux_ARM
      - task: Linux_ARM64
      - task: macOS_64bit

  Windows_32bit:
    desc: Builds Windows 32 bit binaries
    env:
      GOOS: "windows"
      GOARCH: "386"
      GO386: "softfloat"
    cmds:
      - |
        go build -o {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }}.exe {{.LDFLAGS}}
        zip {{ .DIST_DIR}}/{{ .PACKAGE_NAME }} {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }}.exe -j
        zip {{ .DIST_DIR}}/{{ .PACKAGE_NAME }} LICENSE.txt -r
    vars:
      PLATFORM_DIR: "windows32"
      PACKAGE_PLATFORM: "Windows_32bit"
      PACKAGE_NAME: "{{ .PROJECT_NAME }}_{{ .VERSION }}_{{ .PACKAGE_PLATFORM }}.zip"

  Windows_64bit:
    desc: Builds Windows 64 bit binaries
    env:
      GOOS: "windows"
      GOARCH: "amd64"
    cmds:
      - |
        go build -o {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }}.exe {{.LDFLAGS}}
        zip {{ .DIST_DIR}}/{{ .PACKAGE_NAME }} {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }}.exe -j
        zip {{ .DIST_DIR}}/{{ .PACKAGE_NAME }} LICENSE.txt -r
    vars:
      PLATFORM_DIR: "windows64"
      PACKAGE_PLATFORM: "Windows_64bit"
      PACKAGE_NAME: "{{ .PROJECT_NAME }}_{{ .VERSION }}_{{ .PACKAGE_PLATFORM }}.zip"

  Linux_32bit:
    desc: Builds Linux 32 bit binaries
    env:
      GOOS: "linux"
      GOARCH: "386"
      GO386: "softfloat"
    cmds:
      - |
        go build -o {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }} {{.LDFLAGS}}
        tar cz LICENSE.txt -C {{ .DIST_DIR}}/{{ .PLATFORM_DIR }} {{ .PROJECT_NAME }} -f {{ .DIST_DIR }}/{{ .PACKAGE_NAME }}
    vars:
      PLATFORM_DIR: "linux32"
      PACKAGE_PLATFORM: "Linux_32bit"
      PACKAGE_NAME: "{{ .PROJECT_NAME }}_{{ .VERSION }}_{{ .PACKAGE_PLATFORM }}.tar.gz"

  Linux_64bit:
    desc: Builds Linux 64 bit binaries
    env:
      GOOS: "linux"
      GOARCH: "amd64"
    cmds:
      - |
        go build -o {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }} {{.LDFLAGS}}
        tar cz LICENSE.txt -C {{ .DIST_DIR}}/{{ .PLATFORM_DIR }} {{ .PROJECT_NAME }} -f {{ .DIST_DIR }}/{{ .PACKAGE_NAME }}
    vars:
      PLATFORM_DIR: "linux64"
      PACKAGE_PLATFORM: "Linux_64bit"
      PACKAGE_NAME: "{{ .PROJECT_NAME }}_{{ .VERSION }}_{{ .PACKAGE_PLATFORM }}.tar.gz"

  Linux_ARM:
    desc: Builds Linux ARM binaries
    env:
      GOOS: "linux"
      GOARCH: "arm"
    cmds:
      - |
        go build -o {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }} {{.LDFLAGS}}
        tar cz LICENSE.txt -C {{ .DIST_DIR}}/{{ .PLATFORM_DIR }} {{ .PROJECT_NAME }} -f {{ .DIST_DIR }}/{{ .PACKAGE_NAME }}
    vars:
      PLATFORM_DIR: "linuxarm"
      PACKAGE_PLATFORM: "Linux_ARM"
      PACKAGE_NAME: "{{ .PROJECT_NAME }}_{{ .VERSION }}_{{ .PACKAGE_PLATFORM }}.tar.gz"

  Linux_ARM64:
    desc: Builds Linux ARM64 binaries
    env:
      GOOS: "linux"
      GOARCH: "arm64"
    cmds:
      - |
        go build -o {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }} {{.LDFLAGS}}
        tar cz LICENSE.txt -C {{ .DIST_DIR}}/{{ .PLATFORM_DIR }} {{ .PROJECT_NAME }} -f {{ .DIST_DIR }}/{{ .PACKAGE_NAME }}
    vars:
      PLATFORM_DIR: "linuxarm64"
      PACKAGE_PLATFORM: "Linux_ARM64"
      PACKAGE_NAME: "{{ .PROJECT_NAME }}_{{ .VERSION }}_{{ .PACKAGE_PLATFORM }}.tar.gz"

  macOS_64bit:
    desc: Builds Mac OS X 64 bit binaries
    env:
      GOOS: "darwin"
      GOARCH: "amd64"
    cmds:
      - |
        go build -o {{ .DIST_DIR}}/{{ .PLATFORM_DIR }}/{{ .PROJECT_NAME }} {{.LDFLAGS}}
        tar cz LICENSE.txt -C {{ .DIST_DIR}}/{{ .PLATFORM_DIR }} {{ .PROJECT_NAME }} -f {{ .DIST_DIR }}/{{ .PACKAGE_NAME }}
    vars:
      PLATFORM_DIR: "macos64"
      PACKAGE_PLATFORM: "macOS_64bit"
      PACKAGE_NAME: "{{ .PROJECT_NAME }}_{{ .VERSION }}_{{ .PACKAGE_PLATFORM }}.tar.gz"

  generate-index-data:
    desc: Generates json for platform index
    vars:
      WINDOWS32_SHA:
        sh: sha256sum {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Windows_32bit.zip | cut -f1 -d " "
      WINDOWS64_SHA:
        sh: sha256sum {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Windows_64bit.zip | cut -f1 -d " "
      LINUX32_SHA:
        sh: sha256sum {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_32bit.tar.gz | cut -f1 -d " "
      LINUX64_SHA:
        sh: sha256sum {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_64bit.tar.gz | cut -f1 -d " "
      LINUXARM_SHA:
        sh: sha256sum {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_ARM.tar.gz | cut -f1 -d " "
      LINUXARM64_SHA:
        sh: sha256sum {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_ARM64.tar.gz | cut -f1 -d " "
      OSX_SHA:
        sh: sha256sum {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_macOS_64bit.tar.gz | cut -f1 -d " "
      WINDOWS32_SIZE:
        sh: ls -la {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Windows_32bit.zip | cut -f5 -d " "
      WINDOWS64_SIZE:
        sh: ls -la {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Windows_64bit.zip | cut -f5 -d " "
      LINUX32_SIZE:
        sh: ls -la {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_32bit.tar.gz | cut -f5 -d " "
      LINUX64_SIZE:
        sh: ls -la {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_64bit.tar.gz | cut -f5 -d " "
      LINUXARM_SIZE:
        sh: ls -la {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_ARM.tar.gz | cut -f5 -d " "
      LINUXARM64_SIZE:
        sh: ls -la {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_Linux_ARM64.tar.gz | cut -f5 -d " "
      OSX_SIZE:
        sh: ls -la {{ .DIST_DIR }}/{{ .PROJECT_NAME }}_{{ .VERSION }}_macOS_64bit.tar.gz | cut -f5 -d " "
    cmds:
      - |
        cat extras/package_index.json.template |
        sed "s/%%VERSION%%/{{ .VERSION }}/" |
        sed "s/%%FILENAME%%/{{ .PROJECT_NAME }}/" |
        sed "s/%%LINUX64_SHA%%/{{ .LINUX64_SHA }}/" |
        sed "s/%%LINUX64_SIZE%%/{{ .LINUX64_SIZE }}/" |
        sed "s/%%LINUX32_SHA%%/{{ .LINUX32_SHA }}/" |
        sed "s/%%LINUX32_SIZE%%/{{ .LINUX32_SIZE }}/" |
        sed "s/%%LINUXARM_SHA%%/{{ .LINUXARM_SHA }}/" |
        sed "s/%%LINUXARM_SIZE%%/{{ .LINUXARM_SIZE }}/" |
        sed "s/%%LINUXARM64_SHA%%/{{ .LINUXARM64_SHA }}/" |
        sed "s/%%LINUXARM64_SIZE%%/{{ .LINUXARM64_SIZE }}/" |
        sed "s/%%OSX_SHA%%/{{ .OSX_SHA }}/" |
        sed "s/%%OSX_SIZE%%/{{ .OSX_SIZE }}/" |
        sed "s/%%WINDOWS32_SHA%%/{{ .WINDOWS32_SHA }}/" |
        sed "s/%%WINDOWS32_SIZE%%/{{ .WINDOWS32_SIZE }}/" |
        sed "s/%%WINDOWS64_SHA%%/{{ .WINDOWS64_SHA }}/" |
        sed "s/%%WINDOWS64_SIZE%%/{{ .WINDOWS64_SIZE }}/" \
        > {{ .DIST_DIR }}/package_index.json
