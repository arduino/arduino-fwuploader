{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Arduino Firmware Uploader is a tool made to update the firmware and/or add SSL certificates for any Arduino board equipped with ESP32-S3 or NINA Wi-Fi module. Installation \u00b6 You have several options to install the latest version of the Arduino Firmware Uploader on your system, see the installation page. Getting started \u00b6 Follow the Usage guide to see how to use the most common CLI commands. Plugins \u00b6 Read the plugins section to learn more on the topic.","title":"Home"},{"location":"#installation","text":"You have several options to install the latest version of the Arduino Firmware Uploader on your system, see the installation page.","title":"Installation"},{"location":"#getting-started","text":"Follow the Usage guide to see how to use the most common CLI commands.","title":"Getting started"},{"location":"#plugins","text":"Read the plugins section to learn more on the topic.","title":"Plugins"},{"location":"deprecated/","text":"Deprecated boards \u00b6 MKR 1000 \u00b6 The Arduino MKR 1000 has been deprecated during the migration to the plugin system because the board has reached it's EOL state. If you wish to update the firmware it's still possible by using version 2.3.0 of the Arduino Firmware Uploader. MKR Vidor 4000 \u00b6 The Arduino MKR Vidor 4000 has been deprecated during the migration to the plugin system because the board has reached it's EOL state. If you wish to update the firmware it's still possible by using version 2.3.0 of the Arduino Firmware Uploader.","title":"Deprecated boards"},{"location":"deprecated/#deprecated-boards","text":"","title":"Deprecated boards"},{"location":"deprecated/#mkr-1000","text":"The Arduino MKR 1000 has been deprecated during the migration to the plugin system because the board has reached it's EOL state. If you wish to update the firmware it's still possible by using version 2.3.0 of the Arduino Firmware Uploader.","title":"MKR 1000"},{"location":"deprecated/#mkr-vidor-4000","text":"The Arduino MKR Vidor 4000 has been deprecated during the migration to the plugin system because the board has reached it's EOL state. If you wish to update the firmware it's still possible by using version 2.3.0 of the Arduino Firmware Uploader.","title":"MKR Vidor 4000"},{"location":"installation/","text":"Install \u00b6 You can download the Arduino Firmware Uploader directly from the GitHub release page: https://github.com/arduino/arduino-fwuploader/releases/latest How to build the tools from source file \u00b6 To build we use task for simplicity. From the sources root directory run: task dist:<OS>_<ARCH> Where could be one of: macOS , Windows , Linux . And : 32bit , 64bit , ARMv6 , ARMv7 or ARM64 This will create the arduino-fwuploader executable.","title":"Installation"},{"location":"installation/#install","text":"You can download the Arduino Firmware Uploader directly from the GitHub release page: https://github.com/arduino/arduino-fwuploader/releases/latest","title":"Install"},{"location":"installation/#how-to-build-the-tools-from-source-file","text":"To build we use task for simplicity. From the sources root directory run: task dist:<OS>_<ARCH> Where could be one of: macOS , Windows , Linux . And : 32bit , 64bit , ARMv6 , ARMv7 or ARM64 This will create the arduino-fwuploader executable.","title":"How to build the tools from source file"},{"location":"plugins/","text":"Plugins \u00b6 A new plugin-system has been implemented in the Arduino Firmware Uploader. A plugin is basically another executable/tool, specifically tailored for a board/family of boards, but with a well-defined user interface. Inside the plugin, there is all the business logic to support a board/family of boards. Every plugin implements the interface contained in the fwuploader-plugin-helper repository. The fwuploader is still responsible for downloading the files required for the plugin to work: plugins/tools certificates firmware The new information is hosted in the plugin_firmware_index.json , which is generated by generator.py . Portenta C33 \u00b6 The source code can be found here . Nina family \u00b6 The source code can be found here . Supported boards: MKR WiFi 1010 Nano 33 IoT UNO WiFi Rev2 Nano RP2040 Connect UNO R4 WiFi \u00b6 The source code can be found here . Known issues \u00b6 Espflash panic UnknownModel \u00b6 On some arm64 Linux distros, version 2.0.0 of espflash might panic with the following error: Error: \u00d7 Main thread panicked. \u251c\u2500\u25b6 at espflash/src/interface.rs:70:33 \u2570\u2500\u25b6 called `Result::unwrap()` on an `Err` value: UnknownModel help: set the `RUST_BACKTRACE=1` environment variable to display a backtrace. The ESP32 module does not go into download mode \u00b6 On Linux, the UNO R4 WiFi must be plugged into a USB hub to make the flash process work. Otherwise, it won\u2019t be able to reboot in download mode. $ arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a /dev/ttyACM0 -v --log-level debug Done in 0 .001 seconds Write 46588 bytes to flash ( 12 pages ) [==============================] 100 % ( 12 /12 pages ) Done in 3 .106 seconds Waiting to flash the binary... time = 2023 -07-18T14:50:10.492+02:00 level = INFO msg = \"getting firmware version\" time = 2023 -07-18T14:50:10.509+02:00 level = INFO msg = \"firmware version is > 0.1.0 using sketch\" time = 2023 -07-18T14:50:10.511+02:00 level = INFO msg = \"check if serial port has changed\" [ 2023 -07-18T12:50:20Z INFO ] \ud83d\ude80 A new version of espflash is available: v2.0.1 [ 2023 -07-18T12:50:20Z INFO ] Serial port: '/dev/ttyACM0' [ 2023 -07-18T12:50:20Z INFO ] Connecting... [ 2023 -07-18T12:50:20Z INFO ] Unable to connect, retrying with extra delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with default delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with extra delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with default delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with extra delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with default delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with extra delay... Error: espflash::connection_failed \u00d7 Error while connecting to device \u2570\u2500\u25b6 Failed to connect to the device help: Ensure that the device is connected and the reset and boot pins are not being held down Error: exit status 1 ERRO [ 0021 ] couldn ' t update firmware: exit status 3 INFO [ 0021 ] Waiting 1 second before retrying... INFO [ 0022 ] Uploading firmware ( try 2 of 9 ) time = 2023 -07-18T14:50:22.229+02:00 level = INFO msg = upload_command_sketch time = 2023 -07-18T14:50:22.230+02:00 level = INFO msg = \"sending serial reset\" Error: reboot mode: upload commands sketch: setting DTR to OFF ... I flashed the certificates, but I am unable to reach the host \u00b6 There was a bug in the arduino-fwuploader prior 2.4.1 which didn't pick the actual root certificate. Upgrading to the latest version solves the problem. My antivirus says that espflash is a threat \u00b6 The binary is not signed #348 , and some antiviruses might complain. If still doubtful, https://github.com/esp-rs/espflash is open source, and it's possible to double-check the md5 hashes of the binary and the source code. For more information, you can follow this forum thread. Not running on armv7 \u00b6 At the moment, we are always downloading the armv6 binaries. Since they are dynamically linked, most likely they are not going to run on armv7. More infos on the topic: here .","title":"Plugins"},{"location":"plugins/#plugins","text":"A new plugin-system has been implemented in the Arduino Firmware Uploader. A plugin is basically another executable/tool, specifically tailored for a board/family of boards, but with a well-defined user interface. Inside the plugin, there is all the business logic to support a board/family of boards. Every plugin implements the interface contained in the fwuploader-plugin-helper repository. The fwuploader is still responsible for downloading the files required for the plugin to work: plugins/tools certificates firmware The new information is hosted in the plugin_firmware_index.json , which is generated by generator.py .","title":"Plugins"},{"location":"plugins/#portenta-c33","text":"The source code can be found here .","title":"Portenta C33"},{"location":"plugins/#nina-family","text":"The source code can be found here . Supported boards: MKR WiFi 1010 Nano 33 IoT UNO WiFi Rev2 Nano RP2040 Connect","title":"Nina family"},{"location":"plugins/#uno-r4-wifi","text":"The source code can be found here .","title":"UNO R4 WiFi"},{"location":"plugins/#known-issues","text":"","title":"Known issues"},{"location":"plugins/#espflash-panic-unknownmodel","text":"On some arm64 Linux distros, version 2.0.0 of espflash might panic with the following error: Error: \u00d7 Main thread panicked. \u251c\u2500\u25b6 at espflash/src/interface.rs:70:33 \u2570\u2500\u25b6 called `Result::unwrap()` on an `Err` value: UnknownModel help: set the `RUST_BACKTRACE=1` environment variable to display a backtrace.","title":"Espflash panic UnknownModel"},{"location":"plugins/#the-esp32-module-does-not-go-into-download-mode","text":"On Linux, the UNO R4 WiFi must be plugged into a USB hub to make the flash process work. Otherwise, it won\u2019t be able to reboot in download mode. $ arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a /dev/ttyACM0 -v --log-level debug Done in 0 .001 seconds Write 46588 bytes to flash ( 12 pages ) [==============================] 100 % ( 12 /12 pages ) Done in 3 .106 seconds Waiting to flash the binary... time = 2023 -07-18T14:50:10.492+02:00 level = INFO msg = \"getting firmware version\" time = 2023 -07-18T14:50:10.509+02:00 level = INFO msg = \"firmware version is > 0.1.0 using sketch\" time = 2023 -07-18T14:50:10.511+02:00 level = INFO msg = \"check if serial port has changed\" [ 2023 -07-18T12:50:20Z INFO ] \ud83d\ude80 A new version of espflash is available: v2.0.1 [ 2023 -07-18T12:50:20Z INFO ] Serial port: '/dev/ttyACM0' [ 2023 -07-18T12:50:20Z INFO ] Connecting... [ 2023 -07-18T12:50:20Z INFO ] Unable to connect, retrying with extra delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with default delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with extra delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with default delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with extra delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with default delay... [ 2023 -07-18T12:50:21Z INFO ] Unable to connect, retrying with extra delay... Error: espflash::connection_failed \u00d7 Error while connecting to device \u2570\u2500\u25b6 Failed to connect to the device help: Ensure that the device is connected and the reset and boot pins are not being held down Error: exit status 1 ERRO [ 0021 ] couldn ' t update firmware: exit status 3 INFO [ 0021 ] Waiting 1 second before retrying... INFO [ 0022 ] Uploading firmware ( try 2 of 9 ) time = 2023 -07-18T14:50:22.229+02:00 level = INFO msg = upload_command_sketch time = 2023 -07-18T14:50:22.230+02:00 level = INFO msg = \"sending serial reset\" Error: reboot mode: upload commands sketch: setting DTR to OFF ...","title":"The ESP32 module does not go into download mode"},{"location":"plugins/#i-flashed-the-certificates-but-i-am-unable-to-reach-the-host","text":"There was a bug in the arduino-fwuploader prior 2.4.1 which didn't pick the actual root certificate. Upgrading to the latest version solves the problem.","title":"I flashed the certificates, but I am unable to reach the host"},{"location":"plugins/#my-antivirus-says-that-espflash-is-a-threat","text":"The binary is not signed #348 , and some antiviruses might complain. If still doubtful, https://github.com/esp-rs/espflash is open source, and it's possible to double-check the md5 hashes of the binary and the source code. For more information, you can follow this forum thread.","title":"My antivirus says that espflash is a threat"},{"location":"plugins/#not-running-on-armv7","text":"At the moment, we are always downloading the armv6 binaries. Since they are dynamically linked, most likely they are not going to run on armv7. More infos on the topic: here .","title":"Not running on armv7"},{"location":"usage/","text":"Usage \u00b6 Firmware Flashing \u00b6 First install the Arduino Firmware Uploader. Extract the zip file and, for example, to update the NINA module present on the Arduino MKR WiFi 1010, run: ./arduino-fwuploader firmware flash -b arduino:samd:mkrwifi1010 -a /dev/ttyACM0 You just have to specify the FQBN ( -b or --fqbn ) of the board and the serial port ( -a or --address ). The firmware uploader will take care of fetching everything is required to perform the update process. If no module and version are specified the latest version of the firmware will be used. If you want to flash a specific version of a firmware you can use the -m or --module flag For example to flash the ESP32-S3 module present on the UNO R4 WiFi with version 0.2.1 of the firmware you can run something like: ./arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a /dev/ttyACM0 -m ESP32-S3@0.2.1 Or if you want upload a local firmware you can use the -i or --input-file flag followed by the path of that firmware. ./arduino-fwuploader firmware flash -i custom_fw.bin -b arduino:renesas_uno:unor4wifi -a /dev/ttyACM0 There is a retry mechanism because the flashing process uses serial communication, which sometimes can be a bit unreliable. The retry flag is set by default to 9 retries, but it's possible to overwrite it for whatever reason. For example to update a Nano RP2040 Connect with the retry set to 2 you can use: ./arduino-fwuploader firmware flash --fqbn arduino:mbed_nano:nanorp2040connect -a /dev/ttyACM0 --retries 2 It's possible to list the available firmwares for every board/module with: ./arduino-fwuploader firmware list but you can also filter the results by specifying the -b or --fqbn flag The tool offers the ability to print output in JSON, with the --format json flag Get Version \u00b6 You can also obtain the version of the firmware the board is currently running with: ./arduino-fwuploader firmware get-version -b arduino:samd:mkrwifi1010 -a /dev/ttyACM0 The get-version subcommand flashes a special sketch in order to be able to read that information using the serial connection: ... Firmware version installed: 1.4.8 You can also use the --format json flag to parse the output with more ease. Certificates \u00b6 The tool offers also the ability to flash SSL certificates to a module: ./arduino-fwuploader certificates flash -b arduino:samd:nano_33_iot\" -a COM10 -u arduino.cc:443 -u google.com:443 or you can specify a path to a file in .der format or in .pem format with -f or --file instead of the URL of the certificate Due to a limitation on the handling of certs in the NINA modules, when certificates flash command is launched, all the previous certificates are going to be erased. To overcome this it's required to upload them all together: ./arduino-fwuploader certificates flash --url arduino.cc:443,google.com:443 --file ~/Downloads/my_self_signed_.der -b arduino:mbed_nano:nanorp2040connect -a /dev/ttyACM0 You can find the certificates that are preflashed on the NINA module here . Command line options \u00b6 The full list of command line options can be obtained with the -h option: ./arduino-fwuploader -h For further information you can use the command reference","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#firmware-flashing","text":"First install the Arduino Firmware Uploader. Extract the zip file and, for example, to update the NINA module present on the Arduino MKR WiFi 1010, run: ./arduino-fwuploader firmware flash -b arduino:samd:mkrwifi1010 -a /dev/ttyACM0 You just have to specify the FQBN ( -b or --fqbn ) of the board and the serial port ( -a or --address ). The firmware uploader will take care of fetching everything is required to perform the update process. If no module and version are specified the latest version of the firmware will be used. If you want to flash a specific version of a firmware you can use the -m or --module flag For example to flash the ESP32-S3 module present on the UNO R4 WiFi with version 0.2.1 of the firmware you can run something like: ./arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a /dev/ttyACM0 -m ESP32-S3@0.2.1 Or if you want upload a local firmware you can use the -i or --input-file flag followed by the path of that firmware. ./arduino-fwuploader firmware flash -i custom_fw.bin -b arduino:renesas_uno:unor4wifi -a /dev/ttyACM0 There is a retry mechanism because the flashing process uses serial communication, which sometimes can be a bit unreliable. The retry flag is set by default to 9 retries, but it's possible to overwrite it for whatever reason. For example to update a Nano RP2040 Connect with the retry set to 2 you can use: ./arduino-fwuploader firmware flash --fqbn arduino:mbed_nano:nanorp2040connect -a /dev/ttyACM0 --retries 2 It's possible to list the available firmwares for every board/module with: ./arduino-fwuploader firmware list but you can also filter the results by specifying the -b or --fqbn flag The tool offers the ability to print output in JSON, with the --format json flag","title":"Firmware Flashing"},{"location":"usage/#get-version","text":"You can also obtain the version of the firmware the board is currently running with: ./arduino-fwuploader firmware get-version -b arduino:samd:mkrwifi1010 -a /dev/ttyACM0 The get-version subcommand flashes a special sketch in order to be able to read that information using the serial connection: ... Firmware version installed: 1.4.8 You can also use the --format json flag to parse the output with more ease.","title":"Get Version"},{"location":"usage/#certificates","text":"The tool offers also the ability to flash SSL certificates to a module: ./arduino-fwuploader certificates flash -b arduino:samd:nano_33_iot\" -a COM10 -u arduino.cc:443 -u google.com:443 or you can specify a path to a file in .der format or in .pem format with -f or --file instead of the URL of the certificate Due to a limitation on the handling of certs in the NINA modules, when certificates flash command is launched, all the previous certificates are going to be erased. To overcome this it's required to upload them all together: ./arduino-fwuploader certificates flash --url arduino.cc:443,google.com:443 --file ~/Downloads/my_self_signed_.der -b arduino:mbed_nano:nanorp2040connect -a /dev/ttyACM0 You can find the certificates that are preflashed on the NINA module here .","title":"Certificates"},{"location":"usage/#command-line-options","text":"The full list of command line options can be obtained with the -h option: ./arduino-fwuploader -h For further information you can use the command reference","title":"Command line options"},{"location":"commands/arduino-fwuploader/","text":"arduino-fwuploader \u00b6 arduino-fwuploader. Synopsis \u00b6 Arduino Firmware Uploader (arduino-fwuploader). Examples \u00b6 arduino-fwuploader <command> [flags...] Options \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") -h, --help help for arduino-fwuploader --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader certificates - Commands to operate on certificates. arduino-fwuploader firmware - Commands to operate on firmwares. arduino-fwuploader version - Shows version number of arduino-fwuploader.","title":"arduino-fwuploader"},{"location":"commands/arduino-fwuploader/#arduino-fwuploader","text":"arduino-fwuploader.","title":"arduino-fwuploader"},{"location":"commands/arduino-fwuploader/#synopsis","text":"Arduino Firmware Uploader (arduino-fwuploader).","title":"Synopsis"},{"location":"commands/arduino-fwuploader/#examples","text":"arduino-fwuploader <command> [flags...]","title":"Examples"},{"location":"commands/arduino-fwuploader/#options","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") -h, --help help for arduino-fwuploader --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options"},{"location":"commands/arduino-fwuploader/#see-also","text":"arduino-fwuploader certificates - Commands to operate on certificates. arduino-fwuploader firmware - Commands to operate on firmwares. arduino-fwuploader version - Shows version number of arduino-fwuploader.","title":"SEE ALSO"},{"location":"commands/arduino-fwuploader_certificates/","text":"arduino-fwuploader certificates \u00b6 Commands to operate on certificates. Synopsis \u00b6 A subset of commands to perform various certificates operations. Examples \u00b6 arduino-fwuploader certificates ... Options \u00b6 -h, --help help for certificates Options inherited from parent commands \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader - arduino-fwuploader. arduino-fwuploader certificates flash - Flashes certificates to board.","title":"certificates"},{"location":"commands/arduino-fwuploader_certificates/#arduino-fwuploader-certificates","text":"Commands to operate on certificates.","title":"arduino-fwuploader certificates"},{"location":"commands/arduino-fwuploader_certificates/#synopsis","text":"A subset of commands to perform various certificates operations.","title":"Synopsis"},{"location":"commands/arduino-fwuploader_certificates/#examples","text":"arduino-fwuploader certificates ...","title":"Examples"},{"location":"commands/arduino-fwuploader_certificates/#options","text":"-h, --help help for certificates","title":"Options"},{"location":"commands/arduino-fwuploader_certificates/#options-inherited-from-parent-commands","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-fwuploader_certificates/#see-also","text":"arduino-fwuploader - arduino-fwuploader. arduino-fwuploader certificates flash - Flashes certificates to board.","title":"SEE ALSO"},{"location":"commands/arduino-fwuploader_certificates_flash/","text":"arduino-fwuploader certificates flash \u00b6 Flashes certificates to board. Synopsis \u00b6 Flashes specified certificates to board at specified address. arduino-fwuploader certificates flash [flags] Examples \u00b6 arduino-fwuploader certificates flash --fqbn arduino:samd:mkrwifi1010 --address COM10 --url arduino.cc:443 --file /home/me/Digicert.cer arduino-fwuploader certificates flash -b arduino:renesas_uno:unor4wifi -a COM10 -u arduino.cc:443 -u google.com:443 arduino-fwuploader certificates flash -b arduino:samd:mkrwifi1010 -a COM10 -f /home/me/VeriSign.cer -f /home/me/Digicert.cer Options \u00b6 -a, --address string Upload port, e.g.: COM10, /dev/ttyACM0 -f, --file strings List of paths to certificate file, e.g.: /home/me/Digicert.cer -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:samd:mkrwifi1010, arduino:mbed_nano:nanorp2040connect -h, --help help for flash -u, --url strings List of urls to download root certificates, e.g.: arduino.cc:443 Options inherited from parent commands \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader certificates - Commands to operate on certificates.","title":"certificates flash"},{"location":"commands/arduino-fwuploader_certificates_flash/#arduino-fwuploader-certificates-flash","text":"Flashes certificates to board.","title":"arduino-fwuploader certificates flash"},{"location":"commands/arduino-fwuploader_certificates_flash/#synopsis","text":"Flashes specified certificates to board at specified address. arduino-fwuploader certificates flash [flags]","title":"Synopsis"},{"location":"commands/arduino-fwuploader_certificates_flash/#examples","text":"arduino-fwuploader certificates flash --fqbn arduino:samd:mkrwifi1010 --address COM10 --url arduino.cc:443 --file /home/me/Digicert.cer arduino-fwuploader certificates flash -b arduino:renesas_uno:unor4wifi -a COM10 -u arduino.cc:443 -u google.com:443 arduino-fwuploader certificates flash -b arduino:samd:mkrwifi1010 -a COM10 -f /home/me/VeriSign.cer -f /home/me/Digicert.cer","title":"Examples"},{"location":"commands/arduino-fwuploader_certificates_flash/#options","text":"-a, --address string Upload port, e.g.: COM10, /dev/ttyACM0 -f, --file strings List of paths to certificate file, e.g.: /home/me/Digicert.cer -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:samd:mkrwifi1010, arduino:mbed_nano:nanorp2040connect -h, --help help for flash -u, --url strings List of urls to download root certificates, e.g.: arduino.cc:443","title":"Options"},{"location":"commands/arduino-fwuploader_certificates_flash/#options-inherited-from-parent-commands","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-fwuploader_certificates_flash/#see-also","text":"arduino-fwuploader certificates - Commands to operate on certificates.","title":"SEE ALSO"},{"location":"commands/arduino-fwuploader_firmware/","text":"arduino-fwuploader firmware \u00b6 Commands to operate on firmwares. Synopsis \u00b6 A subset of commands to perform various firmware operations. Examples \u00b6 arduino-fwuploader firmware ... Options \u00b6 -h, --help help for firmware Options inherited from parent commands \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader - arduino-fwuploader. arduino-fwuploader firmware flash - Flashes firmwares to board. arduino-fwuploader firmware get-version - Gets the version of the firmware the board is using. arduino-fwuploader firmware list - List available firmwares","title":"firmware"},{"location":"commands/arduino-fwuploader_firmware/#arduino-fwuploader-firmware","text":"Commands to operate on firmwares.","title":"arduino-fwuploader firmware"},{"location":"commands/arduino-fwuploader_firmware/#synopsis","text":"A subset of commands to perform various firmware operations.","title":"Synopsis"},{"location":"commands/arduino-fwuploader_firmware/#examples","text":"arduino-fwuploader firmware ...","title":"Examples"},{"location":"commands/arduino-fwuploader_firmware/#options","text":"-h, --help help for firmware","title":"Options"},{"location":"commands/arduino-fwuploader_firmware/#options-inherited-from-parent-commands","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-fwuploader_firmware/#see-also","text":"arduino-fwuploader - arduino-fwuploader. arduino-fwuploader firmware flash - Flashes firmwares to board. arduino-fwuploader firmware get-version - Gets the version of the firmware the board is using. arduino-fwuploader firmware list - List available firmwares","title":"SEE ALSO"},{"location":"commands/arduino-fwuploader_firmware_flash/","text":"arduino-fwuploader firmware flash \u00b6 Flashes firmwares to board. Synopsis \u00b6 Flashes specified module firmware to board at specified address. Module name and version can be omitted to install latest version. arduino-fwuploader firmware flash [flags] Examples \u00b6 arduino-fwuploader firmware flash --fqbn arduino:samd:mkrwifi1010 --address COM10 --module NINA@1.4.8 arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a COM10 -m ESP32-S3 arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a COM10 arduino-fwuploader firmware flash -b arduino:samd:mkrwifi1010 -a COM10 -i firmware.bin Options \u00b6 -a, --address string Upload port, e.g.: COM10, /dev/ttyACM0 -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:samd:mkrwifi1010, arduino:mbed_nano:nanorp2040connect -h, --help help for flash -i, --input-file string Path of the firmware to upload -m, --module string Firmware module ID, e.g.: ESP32-S3, NINA --retries int Number of retries in case of upload failure (default 9) (default 9) Options inherited from parent commands \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader firmware - Commands to operate on firmwares.","title":"firmware flash"},{"location":"commands/arduino-fwuploader_firmware_flash/#arduino-fwuploader-firmware-flash","text":"Flashes firmwares to board.","title":"arduino-fwuploader firmware flash"},{"location":"commands/arduino-fwuploader_firmware_flash/#synopsis","text":"Flashes specified module firmware to board at specified address. Module name and version can be omitted to install latest version. arduino-fwuploader firmware flash [flags]","title":"Synopsis"},{"location":"commands/arduino-fwuploader_firmware_flash/#examples","text":"arduino-fwuploader firmware flash --fqbn arduino:samd:mkrwifi1010 --address COM10 --module NINA@1.4.8 arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a COM10 -m ESP32-S3 arduino-fwuploader firmware flash -b arduino:renesas_uno:unor4wifi -a COM10 arduino-fwuploader firmware flash -b arduino:samd:mkrwifi1010 -a COM10 -i firmware.bin","title":"Examples"},{"location":"commands/arduino-fwuploader_firmware_flash/#options","text":"-a, --address string Upload port, e.g.: COM10, /dev/ttyACM0 -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:samd:mkrwifi1010, arduino:mbed_nano:nanorp2040connect -h, --help help for flash -i, --input-file string Path of the firmware to upload -m, --module string Firmware module ID, e.g.: ESP32-S3, NINA --retries int Number of retries in case of upload failure (default 9) (default 9)","title":"Options"},{"location":"commands/arduino-fwuploader_firmware_flash/#options-inherited-from-parent-commands","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-fwuploader_firmware_flash/#see-also","text":"arduino-fwuploader firmware - Commands to operate on firmwares.","title":"SEE ALSO"},{"location":"commands/arduino-fwuploader_firmware_get-version/","text":"arduino-fwuploader firmware get-version \u00b6 Gets the version of the firmware the board is using. Synopsis \u00b6 Flashes a sketch to a board to obtain the firmware version used by the board arduino-fwuploader firmware get-version [flags] Examples \u00b6 arduino-fwuploader firmware get-version --fqbn arduino:samd:mkrwifi1010 --address COM10 arduino-fwuploader firmware get-version -b arduino:renesas_uno:unor4wifi -a COM10 Options \u00b6 -a, --address string Upload port, e.g.: COM10, /dev/ttyACM0 -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:samd:mkrwifi1010, arduino:mbed_nano:nanorp2040connect -h, --help help for get-version Options inherited from parent commands \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader firmware - Commands to operate on firmwares.","title":"firmware get-version"},{"location":"commands/arduino-fwuploader_firmware_get-version/#arduino-fwuploader-firmware-get-version","text":"Gets the version of the firmware the board is using.","title":"arduino-fwuploader firmware get-version"},{"location":"commands/arduino-fwuploader_firmware_get-version/#synopsis","text":"Flashes a sketch to a board to obtain the firmware version used by the board arduino-fwuploader firmware get-version [flags]","title":"Synopsis"},{"location":"commands/arduino-fwuploader_firmware_get-version/#examples","text":"arduino-fwuploader firmware get-version --fqbn arduino:samd:mkrwifi1010 --address COM10 arduino-fwuploader firmware get-version -b arduino:renesas_uno:unor4wifi -a COM10","title":"Examples"},{"location":"commands/arduino-fwuploader_firmware_get-version/#options","text":"-a, --address string Upload port, e.g.: COM10, /dev/ttyACM0 -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:samd:mkrwifi1010, arduino:mbed_nano:nanorp2040connect -h, --help help for get-version","title":"Options"},{"location":"commands/arduino-fwuploader_firmware_get-version/#options-inherited-from-parent-commands","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-fwuploader_firmware_get-version/#see-also","text":"arduino-fwuploader firmware - Commands to operate on firmwares.","title":"SEE ALSO"},{"location":"commands/arduino-fwuploader_firmware_list/","text":"arduino-fwuploader firmware list \u00b6 List available firmwares Synopsis \u00b6 Displays the availale firmwares, is it possible to filter results for a specific board. arduino-fwuploader firmware list [flags] Examples \u00b6 arduino-fwuploader firmware list -b arduino:renesas_uno:unor4wifi Options \u00b6 -b, --fqbn string Filter result for the specified board FQBN -h, --help help for list Options inherited from parent commands \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader firmware - Commands to operate on firmwares.","title":"firmware list"},{"location":"commands/arduino-fwuploader_firmware_list/#arduino-fwuploader-firmware-list","text":"List available firmwares","title":"arduino-fwuploader firmware list"},{"location":"commands/arduino-fwuploader_firmware_list/#synopsis","text":"Displays the availale firmwares, is it possible to filter results for a specific board. arduino-fwuploader firmware list [flags]","title":"Synopsis"},{"location":"commands/arduino-fwuploader_firmware_list/#examples","text":"arduino-fwuploader firmware list -b arduino:renesas_uno:unor4wifi","title":"Examples"},{"location":"commands/arduino-fwuploader_firmware_list/#options","text":"-b, --fqbn string Filter result for the specified board FQBN -h, --help help for list","title":"Options"},{"location":"commands/arduino-fwuploader_firmware_list/#options-inherited-from-parent-commands","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-fwuploader_firmware_list/#see-also","text":"arduino-fwuploader firmware - Commands to operate on firmwares.","title":"SEE ALSO"},{"location":"commands/arduino-fwuploader_version/","text":"arduino-fwuploader version \u00b6 Shows version number of arduino-fwuploader. Synopsis \u00b6 Shows the version number of arduino-fwuploader which is installed on your system. arduino-fwuploader version [flags] Examples \u00b6 arduino-fwuploader version Options \u00b6 -h, --help help for version Options inherited from parent commands \u00b6 -F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-fwuploader - arduino-fwuploader.","title":"version"},{"location":"commands/arduino-fwuploader_version/#arduino-fwuploader-version","text":"Shows version number of arduino-fwuploader.","title":"arduino-fwuploader version"},{"location":"commands/arduino-fwuploader_version/#synopsis","text":"Shows the version number of arduino-fwuploader which is installed on your system. arduino-fwuploader version [flags]","title":"Synopsis"},{"location":"commands/arduino-fwuploader_version/#examples","text":"arduino-fwuploader version","title":"Examples"},{"location":"commands/arduino-fwuploader_version/#options","text":"-h, --help help for version","title":"Options"},{"location":"commands/arduino-fwuploader_version/#options-inherited-from-parent-commands","text":"-F, --additional-fw-index stringArray Additional firmwares index URLs (useful for testing purposes) -P, --additional-packages-index stringArray Additional packages index URLs (useful for testing purposes) --format string The output format, can be {text|json}. (default \"text\") --log-file string Path to the file where logs will be written --log-format string The output format for the logs, can be {text|json}. --log-level string Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic (default \"info\") -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-fwuploader_version/#see-also","text":"arduino-fwuploader - arduino-fwuploader.","title":"SEE ALSO"}]}